<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>260</x><y>60</y><w>100</w><h>30</h></coordinates><panel_attributes>Client
--</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>450</x><y>140</y><w>240</w><h>280</h></coordinates><panel_attributes>HomeTheaterFacade
--
Amplifier amp;
Tuner tuner;
DvdPlayer dvd;
CdPlayer cd;
Projector projector;
TheaterLights lights;
Screen screen;
PopcornPopper popper;
--
watchMovie(String movie) {)
void endMovie() {}
listenToCd(String cdTitle) {}
endCd() {}
listenToRadio(double frequency) {}
endRadio() {}
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>280</x><y>490</y><w>160</w><h>140</h></coordinates><panel_attributes>Projector
--
String description;
DvdPlayer dvdPlayer;
--
on() {}
off() {}
wideScreenMode() {}
tvMode() {}</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>450</x><y>510</y><w>170</w><h>240</h></coordinates><panel_attributes>Amplifier
--
String description;
Tuner tuner;
DvdPlayer dvd;
CdPlayer cd;
--
on() {}
off() {}
setStereoSound() {}
setSurroundSound() {}
setVolume(int level) {}
setTuner(Tuner tuner) {}
setDvd(DvdPlayer dvd) {}
setCd(CdPlayer cd) {}
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>630</x><y>540</y><w>180</w><h>260</h></coordinates><panel_attributes>DvdPlayer
--
String description;
int currentTrack;
Amplifier amplifier;
String movie;
--
on() {}
off() {}
eject() {}
play(String movie) {}
play(int track) {}
stop() {{}
pause() {}
setTwoChannelAudio() {}
setSurroundAudio() {}
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>840</x><y>470</y><w>110</w><h>100</h></coordinates><panel_attributes>TheaterLights
--
String description;
--
on() {}
off() {}
dim(int level) {}</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>230</x><y>150</y><w>200</w><h>100</h></coordinates><panel_attributes>The HomeTheaterFacade 
manages all those subsystem
components for the client
It keeps the client simple
and flexible</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>60</x><y>430</y><w>250</w><h>50</h></coordinates><panel_attributes>We can upgrade the home theater
componets without affecting the client</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>540</x><y>0</y><w>200</w><h>100</h></coordinates><panel_attributes>The client only has one friend;
the HomeTheaterFacade. In
OO programming, having only one 
fiend is a GOOD thing!</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>0</x><y>650</y><w>310</w><h>100</h></coordinates><panel_attributes>We try to keep subsystems adhering
to the principle of Least Knowledge
as wel. If this gets to complex and too many 
freinds are intermingling, we can introduce 
additional facades to forms layer of subsystems.</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>320</x><y>390</y><w>210</w><h>120</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>30;100;190;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>500</x><y>390</y><w>60</w><h>140</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>30;120;40;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>560</x><y>390</y><w>170</w><h>170</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>150;150;30;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>630</x><y>390</y><w>230</w><h>120</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>210;100;30;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>330</x><y>30</y><w>260</w><h>130</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>240;110;200;30;120;30;50;30;30;40</additional_attributes></element></umlet_diagram>